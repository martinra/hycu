Import("env")


include_path = [
    env["root_dir"] + "/src"
  , "/usr/include"
  , "/usr/include/flint"
  , "/usr/include/yaml-cpp"
  ]

lib_path = [
    "/usr/lib"
  , "/usr/lib64/beignet"
  ]

libs = [
    "cl"
  , "flint"
  , "gmp"
  , "yaml-cpp"
  ]


env.Append(
    CXXFLAGS = "-std=c++14 -O2 -pthread"
  , CPPPATH  = include_path
  , LIBPATH  = lib_path
  , LIBS     = libs
  )
## todo: dynamic configuration of opencl
env["ENV"]["LD_LIBRARY_PATH"] = \
   "/usr/lib64/beignet:/usr/local/lib" + env["ENV"].get("LD_LIBRARY_PATH", "")


sources_curve = [
    "block_iterator.cc"
  , "curve.cc"
  , "curve_iterator.cc"
  , "fq_element_table.cc"
  , "isogeny_representative_store.cc"
  , "opencl_interface.cc"
  , "reduction_table.cc"
  , "single_curve_fp.cc"
  ]

objs_curve = [ env.Object(s) for s in sources_curve ]
Export("objs_curve")


env.Program(
    "single"
  , [ "single.cc" ] + objs_curve
  )

env.Program(
    "legacy"
  , [ "legacy.cc", "isogeny_count_store.cc" ] + objs_curve
  )


##############################
## merge_isogeny_representative
##############################

libs_merge_isogeny_representatives = [
    "boost_filesystem"
  , "boost_system"
  ]

env_merge_isogeny_representatives = env.Clone()
env_merge_isogeny_representatives.Append(
    LIBS = libs_merge_isogeny_representatives
  )

env_merge_isogeny_representatives.Program(
    "merge_isogeny_representatives"
  , [ "merge_isogeny_representatives.cc" ]
    + objs_curve
  )


##############################
## mpi
##############################

include_path_mpi = [
    "/usr/include/openmpi-x86_64"
  ]

lib_path_mpi = [
    "/usr/lib64/openmpi/lib"
  ]

libs_mpi = [
    "boost_mpi"
  , "boost_serialization"
  , "mpi"
  , "mpi_cxx"
  ]

linkflags_mpi = [
    "-Wl,-rpath,/usr/lib64/openmpi/lib"
  , "-Wl,--enable-new-dtags"
  ]

env_mpi = env.Clone()
env_mpi.Append(
    CPPPATH    = include_path_mpi
  , LIBPATH    = lib_path_mpi
  , LIBS       = libs_mpi
  , LINKFLAGS  = linkflags_mpi
  )


env_mpi.Program(
    "mpi"
  , [ "mpi.cc" , "mpi_worker_pool.cc" ]
    + objs_curve
  )
